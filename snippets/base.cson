'.source.js.jsx':
  # React Native 组件骨架
  'React Native Component Skeleton':
    'prefix': 'rnc'
    'body': """
      import React, { Component } from 'react'
      import {
        View,
        Text,
        StyleSheet,
      } from 'react-native'

      const styles = StyleSheet.create({
        container: {
          flex: 1,
        },
      })

      export default class ${1:MyComponent} extends Component {
        constructor(props) {
          super(props)
          this.state = {
            $2
          }
        }
        render() {
          return (
            <View style={styles.container}>
              <Text>I am the ${1:MyComponent} component</Text>
            </View>
          )
        }
      }
    """
  # React Native 纯组件骨架
  'React Native Pure Component Skeleton':
    'prefix': 'rncp'
    'body': """
      import React from 'react'
      import {
        View,
        Text,
        StyleSheet,
      } from 'react-native'

      const styles = StyleSheet.create({
        container: {
          flex: 1,
        },
      })

      export default ${1:MyComponent} = ({$2}) => (
        ${3:<View style={styles.container\\}>
          ${4:<Text>${5:I am ${1:MyComponent}}</Text>}
        </View>}
      )$6
      """
  '不换行的箭头函数':
    'prefix': 'afr'
    'body': """
      ($1) => $2
    """
  'React Native class':
    'prefix': 'rnclass'
    'body': """
      class $1 extends Component {
        // 一般来说，你需要在constructor中初始化state，然后在需要修改时调用setState方法。
        constructor(props) {
          super(props)
        }
        render() {
          return (
            $2
          )
        }
      }
    """
  'React Native Class Constructor':
    'prefix': 'rncc'
    'body': """
      constructor(props) {
        super(props)
        this.state = {
          $1,
        }
      }
    """
