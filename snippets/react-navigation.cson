'.source.js.jsx':
  'React Navigation':
    'prefix': 'react-navigation'
    'body': """
      import { createBottomTabNavigator, createMaterialTopTabNavigator, createStackNavigator } from 'react-navigation'
    """
  'React Navigation createStackNavigator':
    'prefix': 'createStackNavigator'
    'body': """
      const ${1:Root}Stack = createStackNavigator(
        {
          ${2:Root}
        },
        {
          initialRouteName: '${1:Root}',
          navigationOptions: {
            headerStyle: {
              backgroundColor: '${2:rgb(85, 163, 223)}',
            },
            headerTintColor: '${3:rgb(255,255,255)}',
          },
        },
      )
    """
    'description': '创建一个 stack navigator'
    'descriptionMoreURL': 'https://reactnavigation.org/docs/zh-Hans/hello-react-navigation.html#stack-navigator'
  'React Navigation createBottomTabNavigator':
    'prefix': 'createBottomTabNavigator'
    'body': """
      export default createBottomTabNavigator(
        {
          $1: $1Stack
        },
        {
          initialRouteName: '$1',
          tabBarOptions: {
            activeTintColor: 'rgb(85, 163, 223)',
            inactiveTintColor: 'gray',
          },
          navigationOptions: ({ navigation }) => ({
            tabBarIcon: ({ focused, tintColor }) => {
              const { routeName } = navigation.state
              let iconName
              if (routeName === 'Home') {
                iconName = 'home'
              } else if (routeName === 'Mine') {
                iconName = 'heart'
              }
              return <Icon name={iconName} size={25} color={tintColor} />
            },
          }),
        },
      )
    """
    'description': '创建一个 stack navigator'
    'descriptionMoreURL': 'https://reactnavigation.org/docs/zh-Hans/hello-react-navigation.html#stack-navigator'
  'React Navigation createMaterialTopTabNavigator':
    'prefix': 'createMaterialTopTabNavigator'
    'body': """
      export default createMaterialTopTabNavigator({
        $1
      }, {
        initialRouteName: '$1',
      })
    """
    'description': 'createMaterialTopTabNavigator'
    'descriptionMoreURL': 'http://t.cn/RBmJije'
  'export StackNavigator':
    'prefix': 'exportStackNavigator'
    'body': """
      export default () => (
        <${1:RootStack} />
      )
    """
  'React Navigation 跳转到新页面':
    'prefix': 'stackNavigate'
    'body': """
      ${1:this.props.}navigation.navigate('$2', { ${3:/* params go here */} })
    """
    'description': '跳转到新的页面'
    'descriptionMoreURL': 'https://reactnavigation.org/docs/zh-Hans/navigating.html'
  'React Navigation 添加新页面并跳转':
    'prefix': 'stackPush'
    'body': """
      ${1:this.props.}navigation.push('$2')
    """
    'description': '添加新页面并跳转'
    'descriptionMoreURL': 'https://reactnavigation.org/docs/zh-Hans/navigating.html'
  'React Navigation 手动返回':
    'prefix': 'stackGoBack'
    'body': """
      ${1:this.props.}navigation.goBack('$2')
    """
    'description': '手动返回'
    'descriptionMoreURL': 'https://reactnavigation.org/docs/zh-Hans/navigating.html'
  'React Navigation 返回到堆栈中的第一个页面':
    'prefix': 'stackPopToTop'
    'body': """
      ${1:this.props.}navigation.popToTop()
    """
    'description': '返回到堆栈中的第一个页面'
    'descriptionMoreURL': 'https://reactnavigation.org/docs/zh-Hans/hello-react-navigation.html#stack-navigator'
  'React Navigation navigation':
    'prefix': 'navigation'
    'body': """
      const { navigation } = this.props
    """
  'React Navigation 读取页面组件中的参数':
    'prefix': 'statckParams'
    'body': """
      ${1:this.props.}navigation.state.params
    """
  'React Navigation 读取页面组件中的参数 - 推荐':
    'prefix': 'stackGetParam'
    'body': """
      ${1:this.props.}navigation.getParam('$1')
    """
  'React Navigation navigationOptions func':
    'prefix': 'navigationOptionsf'
    'body': """
      static navigationOptions = ({ ${1:navigation}${2:, navigationOptions}${3:, screenProps} }) => ({
        headerTitle: navigation.getParam('headerTitle', '$4'),
        headerStyle: {
          backgroundColor: '$5',
        },
        headerTintColor: '$6',
      })
    """
  'React Navigation LogoTitle':
    'prefix': 'LogoTitle'
    'body': """
      class LogoTitle extends React.Component {
        render() {
          return (
            <Image
              source={require('$1')}
              style={{ width: ${2:30}, height: ${2:30} }}
            />
          )
        }
      }
      static navigationOptions = ({ ${3:navigation,} ${4:navigationOptions,} ${5:screenProps}}) => ({
        headerTitle: <LogoTitle />,
      })
    """
  # createStackNavigator
  'initialRouteName':
    'prefix': 'initialRouteName'
    'body': """
      "initialRouteName": '$1'
    """
  'navigationOptions':
    'prefix': 'navigationOptions'
    'body': """
      static navigationOptions = {
        headerTitle: '$1',
        headerStyle: {
          backgroundColor: 'rgb(85, 163, 223)',
        },
        headerTintColor: 'rgb(255,255,255)',
      }
    """
  # props
  'React Navigation headerRight':
    'prefix': 'headerRight'
    'body': """
      headerRight: (
        $1
      )
    """
