'.source.jsx':
  'React Navigation RootStack':
    'prefix': 'ReactNavigation'
    'body': """
      import { createStackNavigator } from 'react-navigation'
      const RootStack = createStackNavigator(
        {
          ${1:Home}: ${1:Home}Screen,
        },
        {
          initialRouteName: '${1:Home}',
          navigationOptions: {
            headerStyle: {
              backgroundColor: '${2:rgb(85, 163, 223)}',
            },
            headerTintColor: '${3:rgb(255,255,255)}',
          },
        },
      )
      export default () => (
        <RootStack />
      )
    """
    'description': '创建一个 stack navigator'
    'descriptionMoreURL': 'https://reactnavigation.org/docs/zh-Hans/hello-react-navigation.html#stack-navigator'
  'React Navigation 跳转到新页面':
    'prefix': 'stackNavigate'
    'body': """
      this.props.navigation.navigate('$1', { ${2:/* params go here */} })
    """
    'description': '跳转到新的页面'
    'descriptionMoreURL': 'https://reactnavigation.org/docs/zh-Hans/navigating.html'
  'React Navigation 添加新页面并跳转':
    'prefix': 'stackPush'
    'body': """
      this.props.navigation.push('$1')
    """
    'description': '添加新页面并跳转'
    'descriptionMoreURL': 'https://reactnavigation.org/docs/zh-Hans/navigating.html'
  'React Navigation 手动返回':
    'prefix': 'stackGoBack'
    'body': """
      this.props.navigation.goBack('$1')
    """
    'description': '手动返回'
    'descriptionMoreURL': 'https://reactnavigation.org/docs/zh-Hans/navigating.html'
  'React Navigation 返回到堆栈中的第一个页面':
    'prefix': 'stackPopToTop'
    'body': """
      this.props.navigation.popToTop()
    """
    'description': '返回到堆栈中的第一个页面'
    'descriptionMoreURL': 'https://reactnavigation.org/docs/zh-Hans/hello-react-navigation.html#stack-navigator'
  'React Navigation 读取页面组件中的参数':
    'prefix': 'statckParams'
    'body': """
      this.props.navigation.state.params
    """
  'React Navigation 读取页面组件中的参数 - 推荐':
    'prefix': 'stackGetParam'
    'body': """
      this.props.navigation.getParam('$1')
    """
  'React Navigation navigationOptions':
    'prefix': 'navigationOptions'
    'body': """
      static navigationOptions = ({ ${1:navigation,} ${2:navigationOptions,} ${3:screenProps}}) => ({
        title: navigation.getParam('title', '$4'),
        headerStyle: {
          backgroundColor: '$5',
        },
        headerTintColor: '$6',
      })
    """
  'React Navigation LogoTitle':
    'prefix': 'LogoTitle'
    'body': """
      class LogoTitle extends React.Component {
        render() {
          return (
            <Image
              source={require('$1')}
              style={{ width: ${2:30}, height: ${2:30} }}
            />
          )
        }
      }
      static navigationOptions = ({ ${3:navigation,} ${4:navigationOptions,} ${5:screenProps}}) => ({
        headerTitle: <LogoTitle />,
      })
    """
  # props
  'React Navigation headerRight':
    'prefix': 'headerRight'
    'body': """
      headerRight: (
        $1
      )
    """
